/* @use '@/styles/mixins'; */

@mixin Scrollable($overflowRule: auto) {
  overflow-x: hidden;
  overflow-y: $overflowRule;

  &::-webkit-scrollbar {
    width: 8px;
    margin-top: 4px;
    margin-bottom: 4px;
  }

  &::-webkit-scrollbar-thumb {
    margin-top: 4px;
    margin-bottom: 4px;
    background: #464749; /* Default color of the scrollbar thumb */
    border-radius: 4px;
  }

  &::-webkit-scrollbar-track {
    margin-top: 4px;
    margin-bottom: 4px;
    background: #949596; /* Background color of the scrollbar track */
    border-radius: 4px; /* Round the scrollbar track edges */
    cursor: pointer;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: #545657; /* Darker color when the thumb is hovered */
    cursor: pointer;
  }
}



/* @include mixins.UseScrollBar; */
@mixin UseScrollBar() {
  @include Scrollable();
  overflow-x: hidden; /* Hide overflow content that leads outside of element, horizontally (left or right) */
  overflow-y: auto;
  flex-shrink: 0;
  height: 100%;
}

/* @include mixins.HideHorizontalScrollbar; */
@mixin HideHorizontalScrollbar() {
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-width: none;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

/* @include mixins.FlexSpaceBetween; */
@mixin FlexSpaceBetween() {
  display: flex; /* Flexbox for layout */
  justify-content: space-between; /* Puts empty space between child divs */
  align-items: center; /* Vertically centers child divs */
}

/* @include mixins.FlexCenter; */
@mixin FlexCenter() {
  display: flex; /* Flexbox for layout */
  justify-content: center; /* Horizontally centers child elements */
  align-items: center; /* Vertically centers child divs */
}

/* @include mixins.Flex; */
@mixin Flex() {
  display: flex; /* Flexbox for layout */
  align-items: center; /* Vertically centers child divs */
}

/* @include mixins.SidebarArrowStyle; */
@mixin SidebarArrowStyle($size: 24px) {
  width: $size;
  height: $size;
  mask-image: url('@/assets/icons/caret-down-md\ \(Coolicons\).svg');
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
  background-color: #fff;
  transition: transform 0.2s ease-in-out; /* Smooth transition effect */

  &.open-it { transform: rotate(0deg); }
  &.close-it { transform: rotate(180deg); }
}

/* @include mixins.IconPlaceholder(); */
@mixin IconPlaceholder($size: 20px) {
  width: $size;
  height: $size;
  mask-image: none;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;

  &.icon-empty-placeholder {
    border: 1px dashed rgb(255, 255, 255, 0.5);
    border-radius: 4px;
  }

  &.icon-empty-placeholder-no-border {
    background-color: transparent !important;
  }


  /* Only apply background when it's a real icon */
  &:not(.icon-empty-placeholder),
  &:not(.icon-empty-placeholder-no-border) {
    background-color: #fff;
  }


  &.icon-home { mask-image: url('@/assets/icons/home\ \(Calcite\).svg'); }
  &.icon-settings { mask-image: url('@/assets/icons/settings-cog\ \(Smoothie\).svg'); }
  &.icon-bug { mask-image: url('@/assets/icons/bug\ \(Dazzle\).svg'); }
  &.icon-link { mask-image: url('@/assets/icons/link-2\ \(Xnix\).svg'); }
  &.icon-alert { mask-image: url('@/assets/icons/alert\ \(Uxaspects\).svg'); }
  &.icon-alert-filled { mask-image: url('@/assets/icons/alert-filled\ \(Uxaspects\).svg'); }
  &.icon-alert-square-circle { mask-image: url('@/assets/icons/alert-square\ \(Micions\).svg'); }
  &.icon-add { mask-image: url('@/assets/icons/add\ \(Xnix\).svg'); }
  &.icon-down-right-1 { mask-image: url('@/assets/icons/arrow-right-corner-down\ \(Minimal\).svg'); }
  &.icon-down-right-2 { mask-image: url('@/assets/icons/arrow-square-down-right\ \(Dazzle\).svg'); }
  &.icon-menu { mask-image: url('@/assets/icons/burger-menu\ \(Start\).svg'); }
  &.icon-close { mask-image: url('@/assets/icons/close-md\ \(Coolicons\).svg'); }
  &.icon-hide { mask-image: url('@/assets/icons/eye-hide\ \(Start\).svg'); }
  &.icon-show { mask-image: url('@/assets/icons/eye\ \(Dazzle\).svg'); }
  &.icon-appearance { mask-image: url('@/assets/icons/moon\ \(Dazzle\).svg'); }
  &.icon-login-strt { mask-image: url('@/assets/icons/login\ \(Start\).svg'); }
  &.icon-login-uxasp { mask-image: url('@/assets/icons/login\ \(Uxaspects\).svg'); }
  &.icon-logout-strt { mask-image: url('@/assets/icons/logout\ \(Start\).svg'); }
  &.icon-logout-uxasp { mask-image: url('@/assets/icons/logout\ \(Uxaspects\).svg'); }
  &.icon-checkmark { mask-image: url('@/assets/icons/check\ \(Coolicons\).svg'); }
  // TODO: Before "done" with frontend, must choose one icon for each type. Get rid of duplicates from assets and code.
}

